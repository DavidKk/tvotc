{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"src.0467d2ef.js","sourceRoot":"../src","sourcesContent":["const searchApi = 'https://api.github.com/search/code'\nconst searchKey = encodeURIComponent('border-radius: 19px')\nconst designPrice = 2e6\n\nconst nRepo = document.getElementById('repo') as HTMLInputElement\nconst nBubble = document.getElementById('bubble') as HTMLDivElement\nconst nResult = document.getElementById('result') as HTMLDivElement\nconst nNotify = document.getElementById('notify') as HTMLDivElement\n\nconst announce = (message: string) => {\n  nResult.innerHTML = message\n  nResult.classList.add('show')\n}\n\nconst dismissAnnounce = () => {\n  nResult.classList.remove('show')\n}\n\nconst notify = Object.assign(\n  (message: string) => {\n    notify.nid && clearTimeout(notify.nid)\n    nNotify.innerHTML = message\n    nNotify.classList.add('show')\n  },\n  { nid: NaN }\n)\n\nconst dismissNotify = () => {\n  nNotify.classList.remove('show')\n  notify.nid = undefined\n}\n\nconst reqGithubApi = (url: string) =>\n  new Promise<any>((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200) {\n          try {\n            const body = xhr.responseText\n            const data = JSON.parse(body)\n            resolve(data)\n          } catch (error) {\n            reject(error)\n          }\n        } else {\n          reject(new Error('Request github api failed.'))\n        }\n      }\n    }\n\n    xhr.open('GET', url)\n    xhr.setRequestHeader('Accept', 'application/vnd.github.v3+json')\n    xhr.send()\n  })\n\nconst getValue = async () => {\n  const { value: repo } = nRepo\n  if (repo && /^\\w+\\/\\w+/g.test(repo)) {\n    const data = await reqGithubApi(`${searchApi}?q=${searchKey}+repo:${encodeURIComponent(repo)}`)\n    return data?.items?.length || 0\n  }\n\n  return null\n}\n\nconst onSearch = async () => {\n  try {\n    const result = await getValue()\n    if (typeof result === 'number') {\n      if (result > 0) {\n        const worth = (result * designPrice).toLocaleString('en-US', {\n          style: 'currency',\n          currency: 'USD',\n        })\n\n        announce(`Your code is worth <b>${worth}</b>`)\n      } else {\n        announce('Your code is worthless')\n      }\n    } else {\n      dismissAnnounce()\n    }\n  } catch (error) {\n    notify(`Oops, ${error?.message || 'Something went wrong'}`)\n  }\n}\n\nconst onReset = () => {\n  dismissAnnounce()\n  dismissNotify()\n}\n\nconst bubble = () => {\n  if (nBubble.childNodes.length > 1000) {\n    return\n  }\n\n  const nDollar = document.createElement('span') as HTMLSpanElement\n  nDollar.classList.add('dollar')\n  nDollar.style.fontSize = 20 + Math.random() * 40 + 'px'\n  nDollar.style.left = Math.random() * window.innerWidth + 'px'\n  nDollar.style.animationDuration = 1 + Math.random() * 3 + 's'\n  nDollar.innerHTML = '&#36;'\n\n  const remove = () => {\n    nDollar.removeEventListener('animationend', remove)\n    nBubble.removeChild(nDollar)\n  }\n\n  nDollar.addEventListener('animationend', remove)\n  nBubble.appendChild(nDollar)\n}\n\nconst init = () => {\n  nRepo.addEventListener('change', onSearch)\n  nRepo.addEventListener('keyup', onReset)\n  setInterval(bubble, 30)\n}\n\ndocument.addEventListener('readystatechange', () => {\n  if (document.readyState === 'complete') {\n    init()\n  }\n})\n"]}